<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classhyperion_1_1utils_1_1Logger" kind="class" language="C++" prot="public">
    <compoundname>hyperion::utils::Logger</compoundname>
    <includes refid="Logger_8h" local="no">Logger.h</includes>
    <templateparamlist>
      <param>
        <type>LoggerParametersType</type>
        <declname>LogParameters</declname>
        <defname>LogParameters</defname>
        <defval>DefaultLogParameters</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1Logger_1aa9bb5d7eeb5741816cbc12cd0fce1780" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr LogPolicy</type>
        <definition>constexpr LogPolicy hyperion::utils::Logger&lt; LogParameters &gt;::POLICY</definition>
        <argsstring></argsstring>
        <name>POLICY</name>
        <initializer>= LogParameters::policy</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="167" column="28" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1Logger_1a33616bcb635fb46cb6d4aeae4b777699" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr LogLevel</type>
        <definition>constexpr LogLevel hyperion::utils::Logger&lt; LogParameters &gt;::MINIMUM_LEVEL</definition>
        <argsstring></argsstring>
        <name>MINIMUM_LEVEL</name>
        <initializer>= LogParameters::minimum_level</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="168" column="27" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1Logger_1ad7f49cdfb0cd3a50a4cf3052625ac8eb" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classhyperion_1_1utils_1_1LockFreeQueue" kindref="compound">LockFreeQueue</ref>&lt; Entry, get_queue_policy()&gt; &gt;</type>
        <definition>std::shared_ptr&lt;LockFreeQueue&lt;Entry, get_queue_policy()&gt; &gt; hyperion::utils::Logger&lt; LogParameters &gt;::m_messages</definition>
        <argsstring></argsstring>
        <name>m_messages</name>
        <initializer>= std::make_shared&lt;<ref refid="classhyperion_1_1utils_1_1LockFreeQueue" kindref="compound">LockFreeQueue</ref>&lt;Entry, get_queue_policy()&gt;&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="377" column="17" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1Logger_1af9e2d233182c4f85b3be2b713d435649" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hyperion::utils::Logger&lt; LogParameters &gt;::m_root_name</definition>
        <argsstring></argsstring>
        <name>m_root_name</name>
        <initializer>= &quot;HyperionLog&quot;s</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="379" column="13" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1Logger_1a53b816d23226ca8316913fb880ef0227" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hyperion::utils::Logger&lt; LogParameters &gt;::m_directory_name</definition>
        <argsstring></argsstring>
        <name>m_directory_name</name>
        <initializer>= &quot;Hyperion&quot;s</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="380" column="13" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1Logger_1a4379dda6df5113a20ea4e033d3ab686c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hyperion::utils::Logger&lt; LogParameters &gt;::m_log_file_path</definition>
        <argsstring></argsstring>
        <name>m_log_file_path</name>
        <initializer>= create_log_file_path()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="381" column="13" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1Logger_1ab98b538029e4bec2cd1915b5e4adc0ba" prot="private" static="no" mutable="no">
        <type>std::jthread</type>
        <definition>std::jthread hyperion::utils::Logger&lt; LogParameters &gt;::m_message_thread</definition>
        <argsstring></argsstring>
        <name>m_message_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="382" column="14" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1Logger_1a15c9b6b134560474a41c5d61993751c7" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr fmt::text_style</type>
        <definition>constexpr fmt::text_style hyperion::utils::Logger&lt; LogParameters &gt;::MESSAGE_STYLE</definition>
        <argsstring></argsstring>
        <name>MESSAGE_STYLE</name>
        <initializer>= fmt::fg(fmt::color::white)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="384" column="34" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1Logger_1a8fa33079193e039bff2a1b35112aec53" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr fmt::text_style</type>
        <definition>constexpr fmt::text_style hyperion::utils::Logger&lt; LogParameters &gt;::TRACE_STYLE</definition>
        <argsstring></argsstring>
        <name>TRACE_STYLE</name>
        <initializer>= fmt::fg(fmt::color::steel_blue)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="385" column="34" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1Logger_1a85b2dee9ed50d0831426e2ff12170339" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr fmt::text_style</type>
        <definition>constexpr fmt::text_style hyperion::utils::Logger&lt; LogParameters &gt;::INFO_STYLE</definition>
        <argsstring></argsstring>
        <name>INFO_STYLE</name>
        <initializer>= fmt::fg(fmt::color::light_green) | fmt::emphasis::italic</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="386" column="34" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1Logger_1a46447a521cfab1c44370a01f24b5df7c" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr fmt::text_style</type>
        <definition>constexpr fmt::text_style hyperion::utils::Logger&lt; LogParameters &gt;::WARN_STYLE</definition>
        <argsstring></argsstring>
        <name>WARN_STYLE</name>
        <initializer>= fmt::fg(fmt::color::orange) | fmt::emphasis::bold</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="388" column="34" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1Logger_1a00ce2bc60bf5d73879ee5d2a3e7ac37c" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr fmt::text_style</type>
        <definition>constexpr fmt::text_style hyperion::utils::Logger&lt; LogParameters &gt;::ERROR_STYLE</definition>
        <argsstring></argsstring>
        <name>ERROR_STYLE</name>
        <initializer>= fmt::fg(fmt::color::red) | fmt::emphasis::bold</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="390" column="34" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a625f27be47f1f8f20a689b4f9cb42a72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hyperion::utils::Logger&lt; LogParameters &gt;::Logger</definition>
        <argsstring>()</argsstring>
        <name>Logger</name>
        <briefdescription>
<para>Default Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="171" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="171" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1aa0943b28eb9c7e4b4b400e36537e2070" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hyperion::utils::Logger&lt; LogParameters &gt;::Logger</definition>
        <argsstring>(const std::string &amp;root_name)</argsstring>
        <name>Logger</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>root_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="189" column="10" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="189" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a42e1ee316eede592dbdcf7a985ff0c7b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hyperion::utils::Logger&lt; LogParameters &gt;::Logger</definition>
        <argsstring>(std::string &amp;&amp;root_name)</argsstring>
        <name>Logger</name>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>root_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="208" column="10" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="208" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a30dce0bf44f46b8c0279f7db2f6e9f03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hyperion::utils::Logger&lt; LogParameters &gt;::Logger</definition>
        <argsstring>(const std::string &amp;root_name, const std::string &amp;directory_name)</argsstring>
        <name>Logger</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>root_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>directory_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="227" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="227" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a2beca1178be6b40c0d2ed0e4b54104c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hyperion::utils::Logger&lt; LogParameters &gt;::Logger</definition>
        <argsstring>(const std::string &amp;root_name, std::string &amp;&amp;directory_name)</argsstring>
        <name>Logger</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>root_name</declname>
        </param>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>directory_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="247" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="247" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a2a6551fc87a8df6c47e2e1ce02cd1762" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hyperion::utils::Logger&lt; LogParameters &gt;::Logger</definition>
        <argsstring>(std::string &amp;&amp;root_name, const std::string &amp;directory_name)</argsstring>
        <name>Logger</name>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>root_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>directory_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="267" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="267" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a910e2535db9532d58a19ba4a9084253e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hyperion::utils::Logger&lt; LogParameters &gt;::Logger</definition>
        <argsstring>(std::string &amp;&amp;root_name, std::string &amp;&amp;directory_name)</argsstring>
        <name>Logger</name>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>root_name</declname>
        </param>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>directory_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="287" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="287" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1abd5a13652e9b0a5459d5dada54151e27" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>hyperion::utils::Logger&lt; LogParameters &gt;::Logger</definition>
        <argsstring>(const Logger &amp;logger) noexcept=delete</argsstring>
        <name>Logger</name>
        <param>
          <type>const <ref refid="classhyperion_1_1utils_1_1Logger" kindref="compound">Logger</ref> &amp;</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="307" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a2e41087fc75696244575ac90874027b3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>hyperion::utils::Logger&lt; LogParameters &gt;::Logger</definition>
        <argsstring>(Logger &amp;&amp;logger) noexcept=default</argsstring>
        <name>Logger</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1Logger" kindref="compound">Logger</ref> &amp;&amp;</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a0ba14ea64fe9341c46bd84d625a1b639" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>hyperion::utils::Logger&lt; LogParameters &gt;::~Logger</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~Logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a559d527d4a1b576a451252d43774fc0c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>LogLevel</type>
            <declname>Level</declname>
            <defname>Level</defname>
          </param>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename Char</type>
            <defval>fmt::char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto hyperion::utils::Logger&lt; LogParameters &gt;::log</definition>
        <argsstring>(Option&lt; usize &gt; thread_id, const S &amp;format_string, Args &amp;&amp;... args) noexcept -&gt; Result&lt; bool, LoggerError &gt;</argsstring>
        <name>log</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1Option" kindref="compound">Option</ref>&lt; usize &gt;</type>
          <declname>thread_id</declname>
        </param>
        <param>
          <type>const S &amp;</type>
          <declname>format_string</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="313" column="13" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="313" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a383295674753fb622e02bbace7b85323" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename Char</type>
            <defval>fmt::char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto hyperion::utils::Logger&lt; LogParameters &gt;::message</definition>
        <argsstring>(Option&lt; usize &gt; thread_id, const S &amp;format_string, Args &amp;&amp;... args) noexcept</argsstring>
        <name>message</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1Option" kindref="compound">Option</ref>&lt; usize &gt;</type>
          <declname>thread_id</declname>
        </param>
        <param>
          <type>const S &amp;</type>
          <declname>format_string</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="336" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1aab5c738db2c96b80d9356b24c53fd961" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename Char</type>
            <defval>fmt::char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto hyperion::utils::Logger&lt; LogParameters &gt;::trace</definition>
        <argsstring>(Option&lt; usize &gt; thread_id, const S &amp;format_string, Args &amp;&amp;... args) noexcept</argsstring>
        <name>trace</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1Option" kindref="compound">Option</ref>&lt; usize &gt;</type>
          <declname>thread_id</declname>
        </param>
        <param>
          <type>const S &amp;</type>
          <declname>format_string</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="342" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="342" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a71f7bc392ca0d3602de63a028cea123e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename Char</type>
            <defval>fmt::char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto hyperion::utils::Logger&lt; LogParameters &gt;::info</definition>
        <argsstring>(Option&lt; usize &gt; thread_id, const S &amp;format_string, Args &amp;&amp;... args) noexcept</argsstring>
        <name>info</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1Option" kindref="compound">Option</ref>&lt; usize &gt;</type>
          <declname>thread_id</declname>
        </param>
        <param>
          <type>const S &amp;</type>
          <declname>format_string</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="348" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="348" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a20afb3b1f02586bfafbde09873256adf" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename Char</type>
            <defval>fmt::char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto hyperion::utils::Logger&lt; LogParameters &gt;::warn</definition>
        <argsstring>(Option&lt; usize &gt; thread_id, const S &amp;format_string, Args &amp;&amp;... args) noexcept</argsstring>
        <name>warn</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1Option" kindref="compound">Option</ref>&lt; usize &gt;</type>
          <declname>thread_id</declname>
        </param>
        <param>
          <type>const S &amp;</type>
          <declname>format_string</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="354" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="354" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1ade64824621216f684f71b986f3e1f4ac" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename Char</type>
            <defval>fmt::char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto hyperion::utils::Logger&lt; LogParameters &gt;::error</definition>
        <argsstring>(Option&lt; usize &gt; thread_id, const S &amp;format_string, Args &amp;&amp;... args) noexcept</argsstring>
        <name>error</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1Option" kindref="compound">Option</ref>&lt; usize &gt;</type>
          <declname>thread_id</declname>
        </param>
        <param>
          <type>const S &amp;</type>
          <declname>format_string</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="360" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="360" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1ac8f66d75d6ae776803b6bed5cdf36f0b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto hyperion::utils::Logger&lt; LogParameters &gt;::operator=</definition>
        <argsstring>(const Logger &amp;logger) noexcept -&gt; Logger &amp;=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhyperion_1_1utils_1_1Logger" kindref="compound">Logger</ref> &amp;</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="364" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1adce447f247b40ec1208b02ac543c2025" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto hyperion::utils::Logger&lt; LogParameters &gt;::operator=</definition>
        <argsstring>(Logger &amp;&amp;logger) noexcept -&gt; Logger &amp;=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1Logger" kindref="compound">Logger</ref> &amp;&amp;</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="365" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1acd16a70f1c9b44f163e6c881cc750a28" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>static constexpr auto hyperion::utils::Logger&lt; LogParameters &gt;::get_queue_policy</definition>
        <argsstring>() noexcept -&gt; QueuePolicy</argsstring>
        <name>get_queue_policy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="368" column="31" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="368" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1aa2f749d1649d3416489c042bcfda3e25" prot="private" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>static auto hyperion::utils::Logger&lt; LogParameters &gt;::create_time_stamp</definition>
        <argsstring>() noexcept -&gt; std::string</argsstring>
        <name>create_time_stamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="393" column="21" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="393" bodyend="395"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a2766a0daa0979da7f627375a0976c964" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto hyperion::utils::Logger&lt; LogParameters &gt;::create_log_file_path</definition>
        <argsstring>() const -&gt; std::string</argsstring>
        <name>create_log_file_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="397" column="14" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="397" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1afbedc202f2956d933abf565af19b5c87" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>LogLevel</type>
            <declname>Level</declname>
            <defname>Level</defname>
          </param>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename Char</type>
            <defval>fmt::char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto hyperion::utils::Logger&lt; LogParameters &gt;::log_dropping</definition>
        <argsstring>(Option&lt; usize &gt; thread_id, const S &amp;format_string, Args &amp;&amp;... args) noexcept -&gt; Result&lt; bool, LoggerError &gt; requires(POLICY==LogPolicy::DropWhenFull)</argsstring>
        <name>log_dropping</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1Option" kindref="compound">Option</ref>&lt; usize &gt;</type>
          <declname>thread_id</declname>
        </param>
        <param>
          <type>const S &amp;</type>
          <declname>format_string</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="409" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="409" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a5813b7e675c08dff93487b9eecfaf3ee" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>LogLevel</type>
            <declname>Level</declname>
            <defname>Level</defname>
          </param>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename Char</type>
            <defval>fmt::char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto hyperion::utils::Logger&lt; LogParameters &gt;::log_overwriting</definition>
        <argsstring>(Option&lt; usize &gt; thread_id, const S &amp;format_string, Args &amp;&amp;... args) noexcept -&gt; void requires(POLICY==LogPolicy::OverwriteWhenFull)</argsstring>
        <name>log_overwriting</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1Option" kindref="compound">Option</ref>&lt; usize &gt;</type>
          <declname>thread_id</declname>
        </param>
        <param>
          <type>const S &amp;</type>
          <declname>format_string</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="447" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="447" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1Logger_1a5551aa3193359ffca5300855d1fe84ab" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>LogLevel</type>
            <declname>Level</declname>
            <defname>Level</defname>
          </param>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename Char</type>
            <defval>fmt::char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto hyperion::utils::Logger&lt; LogParameters &gt;::log_flushing</definition>
        <argsstring>(Option&lt; usize &gt; thread_id, const S &amp;format_string, Args &amp;&amp;... args) noexcept -&gt; void requires(POLICY==LogPolicy::FlushWhenFull)</argsstring>
        <name>log_flushing</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1Option" kindref="compound">Option</ref>&lt; usize &gt;</type>
          <declname>thread_id</declname>
        </param>
        <param>
          <type>const S &amp;</type>
          <declname>format_string</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="482" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="482" bodyend="526"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hyperion logging type for formatted logging. Uses fmtlib/fmt for entry formatting and stylizing. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>LogParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>- The parameters for how this logger should operate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" line="165" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/Logger.h" bodystart="165" bodyend="527"/>
    <listofallmembers>
      <member refid="classhyperion_1_1utils_1_1Logger_1a2766a0daa0979da7f627375a0976c964" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>create_log_file_path</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1aa2f749d1649d3416489c042bcfda3e25" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>create_time_stamp</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1ade64824621216f684f71b986f3e1f4ac" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>error</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a00ce2bc60bf5d73879ee5d2a3e7ac37c" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>ERROR_STYLE</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1acd16a70f1c9b44f163e6c881cc750a28" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>get_queue_policy</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a71f7bc392ca0d3602de63a028cea123e" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>info</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a85b2dee9ed50d0831426e2ff12170339" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>INFO_STYLE</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a559d527d4a1b576a451252d43774fc0c" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>log</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1afbedc202f2956d933abf565af19b5c87" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>log_dropping</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a5551aa3193359ffca5300855d1fe84ab" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>log_flushing</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a5813b7e675c08dff93487b9eecfaf3ee" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>log_overwriting</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a625f27be47f1f8f20a689b4f9cb42a72" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>Logger</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1aa0943b28eb9c7e4b4b400e36537e2070" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>Logger</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a42e1ee316eede592dbdcf7a985ff0c7b" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>Logger</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a30dce0bf44f46b8c0279f7db2f6e9f03" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>Logger</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a2beca1178be6b40c0d2ed0e4b54104c8" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>Logger</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a2a6551fc87a8df6c47e2e1ce02cd1762" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>Logger</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a910e2535db9532d58a19ba4a9084253e" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>Logger</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1abd5a13652e9b0a5459d5dada54151e27" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>Logger</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a2e41087fc75696244575ac90874027b3" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>Logger</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a53b816d23226ca8316913fb880ef0227" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>m_directory_name</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a4379dda6df5113a20ea4e033d3ab686c" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>m_log_file_path</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1ab98b538029e4bec2cd1915b5e4adc0ba" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>m_message_thread</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1ad7f49cdfb0cd3a50a4cf3052625ac8eb" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>m_messages</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1af9e2d233182c4f85b3be2b713d435649" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>m_root_name</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a383295674753fb622e02bbace7b85323" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>message</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a15c9b6b134560474a41c5d61993751c7" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>MESSAGE_STYLE</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a33616bcb635fb46cb6d4aeae4b777699" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>MINIMUM_LEVEL</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1ac8f66d75d6ae776803b6bed5cdf36f0b" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>operator=</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1adce447f247b40ec1208b02ac543c2025" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>operator=</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1aa9bb5d7eeb5741816cbc12cd0fce1780" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>POLICY</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1aab5c738db2c96b80d9356b24c53fd961" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>trace</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a8fa33079193e039bff2a1b35112aec53" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>TRACE_STYLE</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a20afb3b1f02586bfafbde09873256adf" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>warn</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a46447a521cfab1c44370a01f24b5df7c" prot="private" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>WARN_STYLE</name></member>
      <member refid="classhyperion_1_1utils_1_1Logger_1a0ba14ea64fe9341c46bd84d625a1b639" prot="public" virt="non-virtual"><scope>hyperion::utils::Logger</scope><name>~Logger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
