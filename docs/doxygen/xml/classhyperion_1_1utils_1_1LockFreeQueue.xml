<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classhyperion_1_1utils_1_1LockFreeQueue" kind="class" language="C++" prot="public">
    <compoundname>hyperion::utils::LockFreeQueue</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>QueuePolicy</type>
        <declname>Policy</declname>
        <defname>Policy</defname>
        <defval>QueuePolicy::ErrWhenFull</defval>
      </param>
      <param>
        <type>usize</type>
        <declname>Capacity</declname>
        <defname>Capacity</defname>
        <defval>DEFAULT_QUEUE_CAPACITY</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1LockFreeQueue_1a5d5eaae911c627db33d95f12f386ad85" prot="private" static="no" mutable="no">
        <type><ref refid="classhyperion_1_1utils_1_1RingBuffer" kindref="compound">RingBuffer</ref>&lt; T, RingBufferType::ThreadSafe &gt;</type>
        <definition>RingBuffer&lt;T, RingBufferType::ThreadSafe&gt; hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <initializer>= <ref refid="classhyperion_1_1utils_1_1RingBuffer" kindref="compound">RingBuffer</ref>&lt;T, RingBufferType::ThreadSafe&gt;(Capacity)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="235" column="12" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1a3977f8b1cd3c4ba8784acc90e616a7e1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::LockFreeQueue</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>LockFreeQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="145" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1a1090dcad602df23c063857e060194b56" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::LockFreeQueue</definition>
        <argsstring>(const LockFreeQueue &amp;queue) noexcept=default</argsstring>
        <name>LockFreeQueue</name>
        <param>
          <type>const <ref refid="classhyperion_1_1utils_1_1LockFreeQueue" kindref="compound">LockFreeQueue</ref> &amp;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="146" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1a5c2bab07f8e97eb31cb7a4dacfa68565" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::LockFreeQueue</definition>
        <argsstring>(LockFreeQueue &amp;&amp;queue) noexcept=default</argsstring>
        <name>LockFreeQueue</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1LockFreeQueue" kindref="compound">LockFreeQueue</ref> &amp;&amp;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="147" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1a77452182a43f12d25e2167168b138d54" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::~LockFreeQueue</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~LockFreeQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="148" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1a9410646e223eb1825183e409bad4ef1b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::push</definition>
        <argsstring>(const T &amp;entry) noexcept -&gt; Result&lt; bool, LockFreeQueueError &gt; requires Copyable&lt; T &gt; &amp;&amp;(Policy==QueuePolicy::ErrWhenFull)</argsstring>
        <name>push</name>
        <param>
          <type>const T &amp;</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="150" column="14" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" bodystart="150" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1ad1498e05fdd9eaef833535e1c723e2b7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::push</definition>
        <argsstring>(T &amp;&amp;entry) noexcept -&gt; Result&lt; bool, LockFreeQueueError &gt; requires(Policy==QueuePolicy::ErrWhenFull)</argsstring>
        <name>push</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="165" column="14" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" bodystart="165" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1aa0520823383cfd5e2c9b0f316a0621c5" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>requires ConstructibleFrom&lt; T, Args... &gt; auto</type>
        <definition>requires ConstructibleFrom&lt;T, Args...&gt; auto hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::push</definition>
        <argsstring>(Args &amp;&amp;... args) noexcept -&gt; Result&lt; bool, LockFreeQueueError &gt; requires(Policy==QueuePolicy::ErrWhenFull)</argsstring>
        <name>push</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="182" column="14" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" bodystart="182" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1ab7587a5c0ed1dcc4ca2fa87b6c0301fd" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::push</definition>
        <argsstring>(const T &amp;entry) noexcept -&gt; void requires Copyable&lt; T &gt; &amp;&amp;(Policy==QueuePolicy::OverwriteWhenFull)</argsstring>
        <name>push</name>
        <param>
          <type>const T &amp;</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="197" column="13" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1a9effabd33c9491213d4f55646a8c4c3a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::push</definition>
        <argsstring>(T &amp;&amp;entry) noexcept -&gt; void requires(Policy==QueuePolicy::OverwriteWhenFull)</argsstring>
        <name>push</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="203" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1af784d45a6a2521d55df029f5560cd80f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>requires ConstructibleFrom&lt; T, Args... &gt; auto</type>
        <definition>requires ConstructibleFrom&lt;T, Args...&gt; auto hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::push</definition>
        <argsstring>(Args &amp;&amp;... args) noexcept -&gt; void requires(Policy==QueuePolicy::OverwriteWhenFull)</argsstring>
        <name>push</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="210" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1a0aceaea29a292718ddb913c1e819e6c6" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::read</definition>
        <argsstring>() noexcept -&gt; Result&lt; T, LockFreeQueueError &gt;</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="214" column="14" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" bodystart="214" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1a5e3b6a326cbecc4cc34e2f8484b5c2ff" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::empty</definition>
        <argsstring>() const noexcept -&gt; bool</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="223" column="14" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1a98d85ea7ec64e55e6ebac9d29a222e8a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::full</definition>
        <argsstring>() const noexcept -&gt; bool</argsstring>
        <name>full</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="227" column="14" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1a06c207487e2b0131bcf39cb0c3a5f6e9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::operator=</definition>
        <argsstring>(const LockFreeQueue &amp;queue) noexcept -&gt; LockFreeQueue &amp;=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhyperion_1_1utils_1_1LockFreeQueue" kindref="compound">LockFreeQueue</ref> &amp;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="231" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1LockFreeQueue_1a0c5e89c04d7b6aa442cc43f35f55b2cd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::LockFreeQueue&lt; T, Policy, Capacity &gt;::operator=</definition>
        <argsstring>(LockFreeQueue &amp;&amp;queue) noexcept -&gt; LockFreeQueue &amp;=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1LockFreeQueue" kindref="compound">LockFreeQueue</ref> &amp;&amp;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="232" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" line="143" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/LockFreeQueue.h" bodystart="143" bodyend="237"/>
    <listofallmembers>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1a5e3b6a326cbecc4cc34e2f8484b5c2ff" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>empty</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1a98d85ea7ec64e55e6ebac9d29a222e8a" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>full</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1a3977f8b1cd3c4ba8784acc90e616a7e1" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>LockFreeQueue</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1a1090dcad602df23c063857e060194b56" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>LockFreeQueue</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1a5c2bab07f8e97eb31cb7a4dacfa68565" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>LockFreeQueue</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1a5d5eaae911c627db33d95f12f386ad85" prot="private" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>m_data</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1a06c207487e2b0131bcf39cb0c3a5f6e9" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>operator=</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1a0c5e89c04d7b6aa442cc43f35f55b2cd" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>operator=</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1a9410646e223eb1825183e409bad4ef1b" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>push</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1ad1498e05fdd9eaef833535e1c723e2b7" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>push</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1aa0520823383cfd5e2c9b0f316a0621c5" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>push</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1ab7587a5c0ed1dcc4ca2fa87b6c0301fd" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>push</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1a9effabd33c9491213d4f55646a8c4c3a" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>push</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1af784d45a6a2521d55df029f5560cd80f" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>push</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1a0aceaea29a292718ddb913c1e819e6c6" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>read</name></member>
      <member refid="classhyperion_1_1utils_1_1LockFreeQueue_1a77452182a43f12d25e2167168b138d54" prot="public" virt="non-virtual"><scope>hyperion::utils::LockFreeQueue</scope><name>~LockFreeQueue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
