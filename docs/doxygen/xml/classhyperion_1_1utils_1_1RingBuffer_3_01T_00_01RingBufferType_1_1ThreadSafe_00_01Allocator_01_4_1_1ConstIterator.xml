<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator" kind="class" language="C++" prot="public">
    <compoundname>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</compoundname>
    <includes refid="RingBuffer_8h" local="no">RingBuffer.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1acd4d89ff4b06755c1d0f6144e969d26c" prot="public" static="no">
        <type>std::random_access_iterator_tag</type>
        <definition>using hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::iterator_category =  std::random_access_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1468" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1ad0a9e8f1e5be2d7a514f69c7aabfda13" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1469" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1ad517f402600d2199879db2cc2ff1cdb8" prot="public" static="no">
        <type>Element</type>
        <definition>using hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::value_type =  Element</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1470" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a44923032d2aea0247bbb40b79c1a6abf" prot="public" static="no">
        <type>const Element</type>
        <definition>using hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::pointer =  const Element</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1471" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a7f38c7819dfe46c710a8f0f65468cd71" prot="public" static="no">
        <type>const Element &amp;</type>
        <definition>using hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::reference =  const Element&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1472" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1472" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a3c807a066423d9ae024f65c25a7a077a" prot="private" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::m_ptr</definition>
        <argsstring></argsstring>
        <name>m_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1619" column="9" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1afa7e9903887ee0a0877f1f0fc173c4b0" prot="private" static="no" mutable="no">
        <type><ref refid="classhyperion_1_1utils_1_1RingBuffer" kindref="compound">RingBuffer</ref> *</type>
        <definition>RingBuffer* hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::m_container_ptr</definition>
        <argsstring></argsstring>
        <name>m_container_ptr</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1620" column="12" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1adf58d90de5b69dd5f3e275365eb9e0c4" prot="private" static="no" mutable="no">
        <type>index_type</type>
        <definition>index_type hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::m_current_index</definition>
        <argsstring></argsstring>
        <name>m_current_index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1621" column="12" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1621" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a840dc8db2ebd10e06a5c6b7d4e86608e" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::ConstIterator</definition>
        <argsstring>(pointer ptr, RingBuffer *containerPtr, index_type currentIndex) noexcept</argsstring>
        <name>ConstIterator</name>
        <param>
          <type>pointer</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1RingBuffer" kindref="compound">RingBuffer</ref> *</type>
          <declname>containerPtr</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>currentIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1474" column="20" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1474" bodyend="1478"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a50051b1bf5dec8dd445fa0640c9361ab" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::ConstIterator</definition>
        <argsstring>(const ConstIterator &amp;iter) noexcept=default</argsstring>
        <name>ConstIterator</name>
        <param>
          <type>const ConstIterator &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1479" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a3a3000a422289aa8b9538cba2192a8dd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::ConstIterator</definition>
        <argsstring>(ConstIterator &amp;&amp;iter) noexcept=default</argsstring>
        <name>ConstIterator</name>
        <param>
          <type>ConstIterator &amp;&amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1480" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1aed8971150418d95c1eb45d06f937ceb6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::~ConstIterator</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~ConstIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a4498122aad6fc90d8cb1ea4e9510f33c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::get_index</definition>
        <argsstring>() const noexcept -&gt; index_type</argsstring>
        <name>get_index</name>
        <briefdescription>
<para>Returns the index in the <computeroutput><ref refid="classhyperion_1_1utils_1_1RingBuffer" kindref="compound">RingBuffer</ref></computeroutput> that corresponds to the element this iterator points to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The index corresponding with the element this points to </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1487" column="24" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1487" bodyend="1489"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a3fbbb6ee47a940a5ab92320b21386256" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator=</definition>
        <argsstring>(const ConstIterator &amp;iter) noexcept -&gt; ConstIterator &amp;=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const ConstIterator &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1492" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a0bcd0a46335584e42ce732d30a6d54e4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator=</definition>
        <argsstring>(ConstIterator &amp;&amp;iter) noexcept -&gt; ConstIterator &amp;=default</argsstring>
        <name>operator=</name>
        <param>
          <type>ConstIterator &amp;&amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1493" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1aff15013c198183af86a15fd6083799aa" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator==</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; bool</argsstring>
        <name>operator==</name>
        <param>
          <type>const ConstIterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1495" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1495" bodyend="1497"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a0b58257ae9c3c77143ee24aeb7ed4cb5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator!=</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; bool</argsstring>
        <name>operator!=</name>
        <param>
          <type>const ConstIterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1499" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1499" bodyend="1501"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a8b428ea4528c3c11dd2d240a0c6868d5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator*</definition>
        <argsstring>() const noexcept -&gt; reference</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1503" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1503" bodyend="1505"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a754011106949133fcf102b39bf313b73" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator-&gt;</definition>
        <argsstring>() const noexcept -&gt; pointer</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1507" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1507" bodyend="1509"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1ac5f6b9aa5f3fee9bc58be5af3b60174c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator++</definition>
        <argsstring>() noexcept -&gt; ConstIterator &amp;</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1511" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1511" bodyend="1521"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a088d666647e4ce9dff0c5125d47926d7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator++</definition>
        <argsstring>(int) noexcept -&gt; ConstIterator</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1523" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1523" bodyend="1527"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a73b19a2413585f1936e605b1047ce5f7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator--</definition>
        <argsstring>() noexcept -&gt; ConstIterator &amp;</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1529" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1529" bodyend="1538"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1ada5915fee9085e8c84851255b75b69b2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator--</definition>
        <argsstring>(int) noexcept -&gt; ConstIterator</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1540" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1540" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a39003fb0379ea5b842896119cb47a415" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator+</definition>
        <argsstring>(Integral auto rhs) const noexcept -&gt; ConstIterator</argsstring>
        <name>operator+</name>
        <param>
          <type>Integral auto</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1546" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1546" bodyend="1562"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1ac6158191fa39d25190c30acee1eb2af5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator+=</definition>
        <argsstring>(Integral auto rhs) noexcept -&gt; ConstIterator &amp;</argsstring>
        <name>operator+=</name>
        <param>
          <type>Integral auto</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1564" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1564" bodyend="1567"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1ab5e5477645c4eb2390da72acaf8b669f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator-</definition>
        <argsstring>(Integral auto rhs) const noexcept -&gt; ConstIterator</argsstring>
        <name>operator-</name>
        <param>
          <type>Integral auto</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1569" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1569" bodyend="1585"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a5cade0cb06900bb0675cab4a8a3ebc87" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator-=</definition>
        <argsstring>(Integral auto rhs) noexcept -&gt; ConstIterator &amp;</argsstring>
        <name>operator-=</name>
        <param>
          <type>Integral auto</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1587" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1587" bodyend="1590"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1aa4e260e0abc5c440f9d20b6ff98c7093" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator-</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; difference_type</argsstring>
        <name>operator-</name>
        <param>
          <type>const ConstIterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1593" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1593" bodyend="1596"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a285c91f868b7d8769e5148b8cdb04148" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator[]</definition>
        <argsstring>(Integral auto index) const noexcept -&gt; ConstIterator</argsstring>
        <name>operator[]</name>
        <param>
          <type>Integral auto</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1598" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1598" bodyend="1600"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a3a617e8cb4ed2c7bc1a601cc335b47e7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator&gt;</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; bool</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const ConstIterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1602" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1602" bodyend="1604"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a63b23823e335d5da5d4a9d2ed1be8a10" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator&lt;</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; bool</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const ConstIterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1606" column="18" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1606" bodyend="1608"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a6e6341779ee337ac1eb18aa80f2a1fdb" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator&gt;=</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; bool</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const ConstIterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1610" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1610" bodyend="1612"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a7522e6c85e35db230e8b8eef4d52d6ca" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator::operator&lt;=</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; bool</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const ConstIterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1614" column="18" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1614" bodyend="1616"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Read-only Random-Access Bidirectional iterator for <computeroutput><ref refid="classhyperion_1_1utils_1_1RingBuffer" kindref="compound">RingBuffer</ref></computeroutput> </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>All navigation operators are checked such that any movement past <computeroutput><ref refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1a149b48da57e072f8e4dc5710637c9d70" kindref="member">begin()</ref></computeroutput> or <computeroutput><ref refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1ae94ac0c9e57c971a96ee45a48d1c929b" kindref="member">end()</ref></computeroutput> is ignored. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="1466" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="1466" bodyend="1622"/>
    <listofallmembers>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a840dc8db2ebd10e06a5c6b7d4e86608e" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>ConstIterator</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a50051b1bf5dec8dd445fa0640c9361ab" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>ConstIterator</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a3a3000a422289aa8b9538cba2192a8dd" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>ConstIterator</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1ad0a9e8f1e5be2d7a514f69c7aabfda13" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>difference_type</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a4498122aad6fc90d8cb1ea4e9510f33c" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>get_index</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1acd4d89ff4b06755c1d0f6144e969d26c" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>iterator_category</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1afa7e9903887ee0a0877f1f0fc173c4b0" prot="private" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>m_container_ptr</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1adf58d90de5b69dd5f3e275365eb9e0c4" prot="private" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>m_current_index</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a3c807a066423d9ae024f65c25a7a077a" prot="private" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>m_ptr</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a0b58257ae9c3c77143ee24aeb7ed4cb5" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator!=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a8b428ea4528c3c11dd2d240a0c6868d5" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator*</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a39003fb0379ea5b842896119cb47a415" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator+</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1ac5f6b9aa5f3fee9bc58be5af3b60174c" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator++</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a088d666647e4ce9dff0c5125d47926d7" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator++</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1ac6158191fa39d25190c30acee1eb2af5" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator+=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1ab5e5477645c4eb2390da72acaf8b669f" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator-</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1aa4e260e0abc5c440f9d20b6ff98c7093" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator-</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a73b19a2413585f1936e605b1047ce5f7" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator--</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1ada5915fee9085e8c84851255b75b69b2" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator--</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a5cade0cb06900bb0675cab4a8a3ebc87" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator-=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a754011106949133fcf102b39bf313b73" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator-&gt;</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a63b23823e335d5da5d4a9d2ed1be8a10" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator&lt;</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a7522e6c85e35db230e8b8eef4d52d6ca" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator&lt;=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a3fbbb6ee47a940a5ab92320b21386256" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a0bcd0a46335584e42ce732d30a6d54e4" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1aff15013c198183af86a15fd6083799aa" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator==</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a3a617e8cb4ed2c7bc1a601cc335b47e7" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator&gt;</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a6e6341779ee337ac1eb18aa80f2a1fdb" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator&gt;=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a285c91f868b7d8769e5148b8cdb04148" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>operator[]</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a44923032d2aea0247bbb40b79c1a6abf" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>pointer</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1a7f38c7819dfe46c710a8f0f65468cd71" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>reference</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1ad517f402600d2199879db2cc2ff1cdb8" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>value_type</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1ConstIterator_1aed8971150418d95c1eb45d06f937ceb6" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::ConstIterator</scope><name>~ConstIterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
