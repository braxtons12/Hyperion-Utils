<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator" kind="class" language="C++" prot="public">
    <compoundname>hyperion::utils::RingBuffer::ConstIterator</compoundname>
    <includes refid="RingBuffer_8h" local="no">RingBuffer.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a5eeebf27c58bcf25b836081938d46ff8" prot="public" static="no">
        <type>std::random_access_iterator_tag</type>
        <definition>using hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::iterator_category =  std::random_access_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="232" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a46012eaeb19e086214bb7f2cefa900cb" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="233" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1abaff1a333f2610b68cc71a903a1c7a1d" prot="public" static="no">
        <type>T</type>
        <definition>using hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="234" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ae20acd3ba5648bed30653ffdf00fd1cd" prot="public" static="no">
        <type>const value_type *</type>
        <definition>using hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::pointer =  const value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="235" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a5c413448822547a384d736ef787ae0d8" prot="public" static="no">
        <type>const value_type &amp;</type>
        <definition>using hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::reference =  const value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="236" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ac36eb3837dc3ae5536bc8245774beeec" prot="private" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::m_ptr</definition>
        <argsstring></argsstring>
        <name>m_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="382" column="9" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a748a7b42fd8e1edb0d216eb3c1300aca" prot="private" static="no" mutable="no">
        <type><ref refid="classhyperion_1_1utils_1_1RingBuffer" kindref="compound">RingBuffer</ref> *</type>
        <definition>RingBuffer* hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::m_container_ptr</definition>
        <argsstring></argsstring>
        <name>m_container_ptr</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="383" column="12" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a7ec4ddb7bdce1091c71ec92ccc6b8f51" prot="private" static="no" mutable="no">
        <type>usize</type>
        <definition>usize hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::m_current_index</definition>
        <argsstring></argsstring>
        <name>m_current_index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="384" column="7" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a850912a1f9ef6ba84bda13a94d405813" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::ConstIterator</definition>
        <argsstring>(pointer ptr, RingBuffer *containerPtr, usize currentIndex) noexcept</argsstring>
        <name>ConstIterator</name>
        <param>
          <type>pointer</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1RingBuffer" kindref="compound">RingBuffer</ref> *</type>
          <declname>containerPtr</declname>
        </param>
        <param>
          <type>usize</type>
          <declname>currentIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="238" column="20" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="238" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a0586537a1f6699dcf533402e91fdbbc7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::ConstIterator</definition>
        <argsstring>(const ConstIterator &amp;iter) noexcept=default</argsstring>
        <name>ConstIterator</name>
        <param>
          <type>const <ref refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="243" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a53479727d9d780daeacc016c4a0f8560" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::ConstIterator</definition>
        <argsstring>(ConstIterator &amp;&amp;iter) noexcept=default</argsstring>
        <name>ConstIterator</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;&amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="244" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ae732b7740f2d3206bb147eda0d67f876" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::~ConstIterator</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~ConstIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1abea314a7ec0906b174a10d3d496dfe89" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::get_index</definition>
        <argsstring>() const noexcept -&gt; usize</argsstring>
        <name>get_index</name>
        <briefdescription>
<para>Returns the index in the <computeroutput><ref refid="classhyperion_1_1utils_1_1RingBuffer" kindref="compound">RingBuffer</ref></computeroutput> that corresponds to the element this iterator points to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The index corresponding with the element this points to </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="251" column="24" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a8276c298af27c64841e7979578b42157" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator=</definition>
        <argsstring>(const ConstIterator &amp;iter) noexcept -&gt; ConstIterator &amp;=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1aa2e814229c0c5b9122d7cd5930a6dbd4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator=</definition>
        <argsstring>(ConstIterator &amp;&amp;iter) noexcept -&gt; ConstIterator &amp;=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;&amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="257" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a18a867baf7fc1afad80ffe99d497f2ce" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator==</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; bool</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="259" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="259" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a434ac4875640ebc8e45f9c5713ec6d73" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator!=</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; bool</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="263" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a6b07e1a1e9b7d249ac0c1c9d8f1da770" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator*</definition>
        <argsstring>() const noexcept -&gt; reference</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="267" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="267" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1aff1244bdadc5b3975ee0f8996cbcf387" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator-&gt;</definition>
        <argsstring>() const noexcept -&gt; pointer</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="271" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="271" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a78eaa5da14b9b55f4235e251958eacb0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator++</definition>
        <argsstring>() noexcept -&gt; ConstIterator &amp;</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="275" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="275" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a97afc0a5c7cc170a899d3501e9696e4c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator++</definition>
        <argsstring>(int) noexcept -&gt; ConstIterator</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="287" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="287" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a0635a4d830b3fd030a39259e9b5e74ae" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator--</definition>
        <argsstring>() noexcept -&gt; ConstIterator &amp;</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="293" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="293" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a6a6f61932210970b84e3e40726d99a03" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator--</definition>
        <argsstring>(int) noexcept -&gt; ConstIterator</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="303" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="303" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1afb69d39ca1cadd34e1d830e032321238" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator+</definition>
        <argsstring>(Integral auto rhs) const noexcept -&gt; ConstIterator</argsstring>
        <name>operator+</name>
        <param>
          <type>Integral auto</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="309" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="309" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ab90cdb346fa08be21358d202ee2307d3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator+=</definition>
        <argsstring>(Integral auto rhs) noexcept -&gt; ConstIterator &amp;</argsstring>
        <name>operator+=</name>
        <param>
          <type>Integral auto</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="327" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="327" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ab9940c54dc95c0a4b79d2ccac680d862" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator-</definition>
        <argsstring>(Integral auto rhs) const noexcept -&gt; ConstIterator</argsstring>
        <name>operator-</name>
        <param>
          <type>Integral auto</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="332" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="332" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ac47f7b146892736561799e51ff850473" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator-=</definition>
        <argsstring>(Integral auto rhs) noexcept -&gt; ConstIterator &amp;</argsstring>
        <name>operator-=</name>
        <param>
          <type>Integral auto</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="350" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="350" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ab66e06752c9505db89a428cfeedae3d7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator-</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; difference_type</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="356" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="356" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a2418cdfac75e9795ab3ef159fc217392" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator[]</definition>
        <argsstring>(Integral auto index) const noexcept -&gt; ConstIterator</argsstring>
        <name>operator[]</name>
        <param>
          <type>Integral auto</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="361" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="361" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ab2fa097d5cdc9b0ec54d48cdf612896f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator&gt;</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; bool</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="365" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="365" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a7d1011956bd07bbf96d6c6b2047a468c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator&lt;</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; bool</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="369" column="18" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="369" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a9f44d861b64a74562ff071ec7e1d04af" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator&gt;=</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; bool</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="373" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="373" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1aedebcce092fde515e9e184ce331c6dc7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, ThreadSafety, Allocator &gt;::ConstIterator::operator&lt;=</definition>
        <argsstring>(const ConstIterator &amp;rhs) const noexcept -&gt; bool</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator" kindref="compound">ConstIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="377" column="18" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="377" bodyend="379"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Read-only Random-Access Bidirectional iterator for <computeroutput><ref refid="classhyperion_1_1utils_1_1RingBuffer" kindref="compound">RingBuffer</ref></computeroutput> </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>All navigation operators are checked such that any movement past <computeroutput><ref refid="classhyperion_1_1utils_1_1RingBuffer_1afc705634849bcfc17d690d79f0a6d67f" kindref="member">begin()</ref></computeroutput> or <computeroutput><ref refid="classhyperion_1_1utils_1_1RingBuffer_1a1e16e34dbad26f08347338b55cda254a" kindref="member">end()</ref></computeroutput> is ignored. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="230" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="230" bodyend="385"/>
    <listofallmembers>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a850912a1f9ef6ba84bda13a94d405813" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>ConstIterator</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a0586537a1f6699dcf533402e91fdbbc7" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>ConstIterator</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a53479727d9d780daeacc016c4a0f8560" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>ConstIterator</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a46012eaeb19e086214bb7f2cefa900cb" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>difference_type</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1abea314a7ec0906b174a10d3d496dfe89" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>get_index</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a5eeebf27c58bcf25b836081938d46ff8" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>iterator_category</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a748a7b42fd8e1edb0d216eb3c1300aca" prot="private" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>m_container_ptr</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a7ec4ddb7bdce1091c71ec92ccc6b8f51" prot="private" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>m_current_index</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ac36eb3837dc3ae5536bc8245774beeec" prot="private" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>m_ptr</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a434ac4875640ebc8e45f9c5713ec6d73" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator!=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a6b07e1a1e9b7d249ac0c1c9d8f1da770" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator*</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1afb69d39ca1cadd34e1d830e032321238" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator+</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a78eaa5da14b9b55f4235e251958eacb0" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator++</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a97afc0a5c7cc170a899d3501e9696e4c" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator++</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ab90cdb346fa08be21358d202ee2307d3" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator+=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ab9940c54dc95c0a4b79d2ccac680d862" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator-</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ab66e06752c9505db89a428cfeedae3d7" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator-</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a0635a4d830b3fd030a39259e9b5e74ae" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator--</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a6a6f61932210970b84e3e40726d99a03" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator--</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ac47f7b146892736561799e51ff850473" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator-=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1aff1244bdadc5b3975ee0f8996cbcf387" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator-&gt;</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a7d1011956bd07bbf96d6c6b2047a468c" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator&lt;</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1aedebcce092fde515e9e184ce331c6dc7" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator&lt;=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a8276c298af27c64841e7979578b42157" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1aa2e814229c0c5b9122d7cd5930a6dbd4" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a18a867baf7fc1afad80ffe99d497f2ce" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator==</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ab2fa097d5cdc9b0ec54d48cdf612896f" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator&gt;</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a9f44d861b64a74562ff071ec7e1d04af" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator&gt;=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a2418cdfac75e9795ab3ef159fc217392" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>operator[]</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ae20acd3ba5648bed30653ffdf00fd1cd" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>pointer</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1a5c413448822547a384d736ef787ae0d8" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>reference</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1abaff1a333f2610b68cc71a903a1c7a1d" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>value_type</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_1_1ConstIterator_1ae732b7740f2d3206bb147eda0d67f876" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer::ConstIterator</scope><name>~ConstIterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
