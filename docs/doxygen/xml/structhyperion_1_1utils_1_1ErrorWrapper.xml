<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="structhyperion_1_1utils_1_1ErrorWrapper" kind="struct" language="C++" prot="public">
    <compoundname>hyperion::utils::ErrorWrapper</compoundname>
    <templateparamlist>
      <param>
        <type>ErrorType</type>
        <declname>E</declname>
        <defname>E</defname>
        <defval><ref refid="classhyperion_1_1utils_1_1Error" kindref="compound">Error</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhyperion_1_1utils_1_1ErrorWrapper_1a5b010fe5d0f7529e8881e0cd5e19188c" prot="public" static="no" mutable="no">
        <type>E</type>
        <definition>E hyperion::utils::ErrorWrapper&lt; E &gt;::m_error</definition>
        <argsstring></argsstring>
        <name>m_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/OptionAndResult.h" line="726" column="3" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/OptionAndResult.h" bodystart="726" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhyperion_1_1utils_1_1ErrorWrapper_1a5ada2a10f1185f36a14156828aa10474" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::ErrorWrapper&lt; E &gt;::ErrorWrapper</definition>
        <argsstring>(const E &amp;error)</argsstring>
        <name>ErrorWrapper</name>
        <param>
          <type>const E &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/OptionAndResult.h" line="711" column="20" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/OptionAndResult.h" bodystart="711" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="structhyperion_1_1utils_1_1ErrorWrapper_1a48698ee2752fe6478d2763c993363c6b" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::ErrorWrapper&lt; E &gt;::ErrorWrapper</definition>
        <argsstring>(E &amp;&amp;error)</argsstring>
        <name>ErrorWrapper</name>
        <param>
          <type>E &amp;&amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/OptionAndResult.h" line="713" column="20" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/OptionAndResult.h" bodystart="713" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="structhyperion_1_1utils_1_1ErrorWrapper_1aca8b19c164a92e92e1cf09673147e608" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::ErrorWrapper&lt; E &gt;::ErrorWrapper</definition>
        <argsstring>(const ErrorWrapper &amp;error) noexcept requires Copyable&lt; E &gt;=default</argsstring>
        <name>ErrorWrapper</name>
        <param>
          <type>const <ref refid="structhyperion_1_1utils_1_1ErrorWrapper" kindref="compound">ErrorWrapper</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/OptionAndResult.h" line="715" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structhyperion_1_1utils_1_1ErrorWrapper_1a001aed35a51113930988549983f2d93d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::ErrorWrapper&lt; E &gt;::ErrorWrapper</definition>
        <argsstring>(ErrorWrapper &amp;&amp;error) noexcept requires Movable&lt; E &gt;=default</argsstring>
        <name>ErrorWrapper</name>
        <param>
          <type><ref refid="structhyperion_1_1utils_1_1ErrorWrapper" kindref="compound">ErrorWrapper</ref> &amp;&amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/OptionAndResult.h" line="717" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structhyperion_1_1utils_1_1ErrorWrapper_1a2d962c2b9edf96a8dd129202a9e7f7df" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::ErrorWrapper&lt; E &gt;::~ErrorWrapper</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~ErrorWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/OptionAndResult.h" line="719" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structhyperion_1_1utils_1_1ErrorWrapper_1ab1dee574937a2005384a589e1da6fa95" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::ErrorWrapper&lt; E &gt;::operator=</definition>
        <argsstring>(const ErrorWrapper &amp;error) noexcept -&gt; ErrorWrapper &amp;requires Copyable&lt; E &gt;=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structhyperion_1_1utils_1_1ErrorWrapper" kindref="compound">ErrorWrapper</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/OptionAndResult.h" line="721" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structhyperion_1_1utils_1_1ErrorWrapper_1aabc2074ce406cbe233a71487b3c93d0b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::ErrorWrapper&lt; E &gt;::operator=</definition>
        <argsstring>(ErrorWrapper &amp;&amp;error) noexcept -&gt; ErrorWrapper &amp;requires Movable&lt; E &gt;=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structhyperion_1_1utils_1_1ErrorWrapper" kindref="compound">ErrorWrapper</ref> &amp;&amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/OptionAndResult.h" line="723" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>hyperion::utils::Error</label>
        <link refid="classhyperion_1_1utils_1_1Error"/>
      </node>
      <node id="1">
        <label>hyperion::utils::ErrorWrapper&lt; E &gt;</label>
        <link refid="structhyperion_1_1utils_1_1ErrorWrapper"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_error</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/OptionAndResult.h" line="710" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/OptionAndResult.h" bodystart="710" bodyend="727"/>
    <listofallmembers>
      <member refid="structhyperion_1_1utils_1_1ErrorWrapper_1a5ada2a10f1185f36a14156828aa10474" prot="public" virt="non-virtual"><scope>hyperion::utils::ErrorWrapper</scope><name>ErrorWrapper</name></member>
      <member refid="structhyperion_1_1utils_1_1ErrorWrapper_1a48698ee2752fe6478d2763c993363c6b" prot="public" virt="non-virtual"><scope>hyperion::utils::ErrorWrapper</scope><name>ErrorWrapper</name></member>
      <member refid="structhyperion_1_1utils_1_1ErrorWrapper_1aca8b19c164a92e92e1cf09673147e608" prot="public" virt="non-virtual"><scope>hyperion::utils::ErrorWrapper</scope><name>ErrorWrapper</name></member>
      <member refid="structhyperion_1_1utils_1_1ErrorWrapper_1a001aed35a51113930988549983f2d93d" prot="public" virt="non-virtual"><scope>hyperion::utils::ErrorWrapper</scope><name>ErrorWrapper</name></member>
      <member refid="structhyperion_1_1utils_1_1ErrorWrapper_1a5b010fe5d0f7529e8881e0cd5e19188c" prot="public" virt="non-virtual"><scope>hyperion::utils::ErrorWrapper</scope><name>m_error</name></member>
      <member refid="structhyperion_1_1utils_1_1ErrorWrapper_1ab1dee574937a2005384a589e1da6fa95" prot="public" virt="non-virtual"><scope>hyperion::utils::ErrorWrapper</scope><name>operator=</name></member>
      <member refid="structhyperion_1_1utils_1_1ErrorWrapper_1aabc2074ce406cbe233a71487b3c93d0b" prot="public" virt="non-virtual"><scope>hyperion::utils::ErrorWrapper</scope><name>operator=</name></member>
      <member refid="structhyperion_1_1utils_1_1ErrorWrapper_1a2d962c2b9edf96a8dd129202a9e7f7df" prot="public" virt="non-virtual"><scope>hyperion::utils::ErrorWrapper</scope><name>~ErrorWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
