<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State" kind="class" language="C++" prot="private">
    <compoundname>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a248172e6930942b815b55fdb229a9eb2" prot="public" static="no">
        <type>uint64_t</type>
        <definition>using hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::merged_type =  uint64_t</definition>
        <argsstring></argsstring>
        <name>merged_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2124" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a0fe6731dd77431a8abcdf292aca83e23" prot="public" static="no">
        <type>std::atomic&lt; index_type &gt;</type>
        <definition>using hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::atomic_index_type =  std::atomic&lt;index_type&gt;</definition>
        <argsstring></argsstring>
        <name>atomic_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2125" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ad81e881e1083ccda728c848f6d434340" prot="public" static="no">
        <type>std::atomic&lt; merged_type &gt;</type>
        <definition>using hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::atomic_merged_type =  std::atomic&lt;merged_type&gt;</definition>
        <argsstring></argsstring>
        <name>atomic_merged_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2126" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a44bd94cee402c524da05b9ad5dd63dd2" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::START_SHIFT</definition>
        <argsstring></argsstring>
        <name>START_SHIFT</name>
        <initializer>= 32_u32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2336" column="26" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ae55f07f8c254bb63fa1c0949af358110" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr merged_type</type>
        <definition>constexpr merged_type hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::MASK</definition>
        <argsstring></argsstring>
        <name>MASK</name>
        <initializer>= 0x0000&apos;0000&apos;FFFF&apos;FFFF_u32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2337" column="30" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2337" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a44f05888c9b13af2fe63d48681092f78" prot="private" static="no" mutable="no">
        <type>atomic_merged_type</type>
        <definition>atomic_merged_type hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::m_indices</definition>
        <argsstring></argsstring>
        <name>m_indices</name>
        <initializer>= 0_usize</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2338" column="20" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a58870990018e7bb110927124455d5a2d" prot="private" static="no" mutable="no">
        <type>atomic_index_type</type>
        <definition>atomic_index_type hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::m_capacity</definition>
        <argsstring></argsstring>
        <name>m_capacity</name>
        <initializer>= DEFAULT_CAPACITY_INTERNAL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2339" column="19" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2339" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ae5dd159a2e712baab682298c22f384ae" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::State</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>State</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2128" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a6eaa80d4d5e2e03b8431f6af5089a521" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::State</definition>
        <argsstring>(index_type capacity) noexcept</argsstring>
        <name>State</name>
        <param>
          <type>index_type</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2129" column="20" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2129" bodyend="2130"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a7ea06baf8a2722dbd3115656e40331d9" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::State</definition>
        <argsstring>(index_type capacity, index_type start, index_type write) noexcept</argsstring>
        <name>State</name>
        <param>
          <type>index_type</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>start</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>write</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2131" column="20" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2131" bodyend="2135"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1aa1a53c5d1daf275f9a4f1e83c70c5e33" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::State</definition>
        <argsstring>(const State &amp;state) noexcept</argsstring>
        <name>State</name>
        <param>
          <type>const State &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2136" column="11" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2136" bodyend="2138"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a8b408a8d7de384efc18caf8e7dc02752" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::State</definition>
        <argsstring>(State &amp;&amp;state) noexcept</argsstring>
        <name>State</name>
        <param>
          <type>State &amp;&amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2139" column="11" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2139" bodyend="2141"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a014af097d253da60aa5cd6c6a6f29278" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::~State</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~State</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2142" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a3329109f1eca8f4248a4f20302de8487" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::update</definition>
        <argsstring>(index_type start, index_type write, index_type capacity) noexcept -&gt; void</argsstring>
        <name>update</name>
        <param>
          <type>index_type</type>
          <declname>start</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>write</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2145" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2145" bodyend="2153"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a7f3b1837c694ba83c0c07cc23abbfbac" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::start</definition>
        <argsstring>() const noexcept -&gt; index_type</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2155" column="24" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2155" bodyend="2157"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a6738ab765f4d9a9d10df41e1a913b0ec" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::write</definition>
        <argsstring>() const noexcept -&gt; index_type</argsstring>
        <name>write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2159" column="24" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2159" bodyend="2161"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ad2d7b2149b78c330d7a70b40e458453a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::indices</definition>
        <argsstring>() const noexcept -&gt; std::tuple&lt; index_type, index_type &gt;</argsstring>
        <name>indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2164" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2164" bodyend="2167"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a91417debc36fa1af0af9cb347f4ba342" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::capacity</definition>
        <argsstring>() const noexcept -&gt; index_type</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2169" column="24" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2169" bodyend="2171"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a21187bffa5129fc7aa3c762b8d782f8e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::max_size</definition>
        <argsstring>() const noexcept -&gt; index_type</argsstring>
        <name>max_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2173" column="24" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2173" bodyend="2175"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a1f168c4d53ed827e1e6dc2e938b2afa5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::loop_index</definition>
        <argsstring>() const noexcept -&gt; index_type</argsstring>
        <name>loop_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2177" column="24" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2177" bodyend="2179"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a42a6fd458dc45db755c09ded2bb2ec49" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::size</definition>
        <argsstring>() const noexcept -&gt; index_type</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2181" column="24" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2181" bodyend="2187"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1aeee78bca73e8671366f491ff01da4bb3" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::size</definition>
        <argsstring>(UnsignedIntegral auto start, UnsignedIntegral auto write, UnsignedIntegral auto capacity) const noexcept -&gt; index_type</argsstring>
        <name>size</name>
        <param>
          <type>UnsignedIntegral auto</type>
          <declname>start</declname>
        </param>
        <param>
          <type>UnsignedIntegral auto</type>
          <declname>write</declname>
        </param>
        <param>
          <type>UnsignedIntegral auto</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2190" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2190" bodyend="2198"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a5a0c4a3dc0813778085d0a7fceab89d5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::empty</definition>
        <argsstring>() const noexcept -&gt; bool</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2200" column="24" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2200" bodyend="2202"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a5a4052a53e738b248346deacc40cd4a3" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::full</definition>
        <argsstring>() const noexcept -&gt; bool</argsstring>
        <name>full</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2204" column="24" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2204" bodyend="2212"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a625a2185da376f3f096f0f2f5dde2e2b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::clear</definition>
        <argsstring>() noexcept -&gt; void</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2214" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2214" bodyend="2218"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a57b47551ab14a60714440a95a1015454" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::adjusted_index</definition>
        <argsstring>(UnsignedIntegral auto index) const noexcept -&gt; index_type</argsstring>
        <name>adjusted_index</name>
        <param>
          <type>UnsignedIntegral auto</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2221" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2221" bodyend="2224"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1acfdab68bf2ab845f49b3591825dbf91d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::adjusted_index</definition>
        <argsstring>(UnsignedIntegral auto index, UnsignedIntegral auto start, UnsignedIntegral auto capacity) const noexcept -&gt; index_type</argsstring>
        <name>adjusted_index</name>
        <param>
          <type>UnsignedIntegral auto</type>
          <declname>index</declname>
        </param>
        <param>
          <type>UnsignedIntegral auto</type>
          <declname>start</declname>
        </param>
        <param>
          <type>UnsignedIntegral auto</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2227" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2227" bodyend="2234"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1afdcf59c351b39934e3dd8b892fdb3d9c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::back</definition>
        <argsstring>() const noexcept -&gt; index_type</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2236" column="24" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2236" bodyend="2243"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a43ee796df80f2a3ae8631c2d85458d2a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::increment_indices</definition>
        <argsstring>() noexcept -&gt; void</argsstring>
        <name>increment_indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2245" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2245" bodyend="2262"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ad558bd1feef4d22097ef1eb08f58c689" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::increment_start</definition>
        <argsstring>() noexcept -&gt; void</argsstring>
        <name>increment_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2264" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2264" bodyend="2273"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ad10ac4aa58e9d4e74b4abf244a0f3ad1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::decrement_write</definition>
        <argsstring>() noexcept -&gt; void</argsstring>
        <name>decrement_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2275" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2275" bodyend="2290"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ab9448de2e775c78fdb5c52c5950d792d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::decrement_write_n</definition>
        <argsstring>(UnsignedIntegral auto n) noexcept -&gt; void</argsstring>
        <name>decrement_write_n</name>
        <param>
          <type>UnsignedIntegral auto</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2292" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2292" bodyend="2310"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a4542e1165b9e9c4d1ccf102d75462e73" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::set_write</definition>
        <argsstring>(UnsignedIntegral auto index) noexcept -&gt; void</argsstring>
        <name>set_write</name>
        <param>
          <type>UnsignedIntegral auto</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2312" column="23" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2312" bodyend="2318"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a03e56b488513ecc4126f3abf4adaaadb" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::operator=</definition>
        <argsstring>(const State &amp;state) noexcept -&gt; State &amp;</argsstring>
        <name>operator=</name>
        <param>
          <type>const State &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2320" column="16" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2320" bodyend="2328"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ace053d1a8610e234c6583136d137c356" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::operator=</definition>
        <argsstring>(State &amp;&amp;state) noexcept -&gt; State &amp;</argsstring>
        <name>operator=</name>
        <param>
          <type>State &amp;&amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2329" column="16" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2329" bodyend="2333"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a1e9389255da2498ac1996677eabb3aad" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>static constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::merge_indices</definition>
        <argsstring>(index_type start, index_type write) noexcept -&gt; merged_type</argsstring>
        <name>merge_indices</name>
        <param>
          <type>index_type</type>
          <declname>start</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>write</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2342" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2342" bodyend="2344"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a1d662a23625b327d1385e411ed56b030" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>static constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::start</definition>
        <argsstring>(merged_type indices) noexcept -&gt; index_type</argsstring>
        <name>start</name>
        <param>
          <type>merged_type</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2347" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2347" bodyend="2349"/>
      </memberdef>
      <memberdef kind="function" id="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a60b1044dd7b2a3d4a5fcc56bda986a11" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>static constexpr auto hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State::write</definition>
        <argsstring>(merged_type indices) noexcept -&gt; index_type</argsstring>
        <name>write</name>
        <param>
          <type>merged_type</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2352" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2352" bodyend="2354"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" line="2122" column="1" bodyfile="/home/braxton/git/Hyperion/utils/include/HyperionUtils/RingBuffer.h" bodystart="2122" bodyend="2355"/>
    <listofallmembers>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a57b47551ab14a60714440a95a1015454" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>adjusted_index</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1acfdab68bf2ab845f49b3591825dbf91d" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>adjusted_index</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a0fe6731dd77431a8abcdf292aca83e23" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>atomic_index_type</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ad81e881e1083ccda728c848f6d434340" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>atomic_merged_type</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1afdcf59c351b39934e3dd8b892fdb3d9c" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>back</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a91417debc36fa1af0af9cb347f4ba342" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>capacity</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a625a2185da376f3f096f0f2f5dde2e2b" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>clear</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ad10ac4aa58e9d4e74b4abf244a0f3ad1" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>decrement_write</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ab9448de2e775c78fdb5c52c5950d792d" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>decrement_write_n</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a5a0c4a3dc0813778085d0a7fceab89d5" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>empty</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a5a4052a53e738b248346deacc40cd4a3" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>full</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a43ee796df80f2a3ae8631c2d85458d2a" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>increment_indices</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ad558bd1feef4d22097ef1eb08f58c689" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>increment_start</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ad2d7b2149b78c330d7a70b40e458453a" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>indices</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a1f168c4d53ed827e1e6dc2e938b2afa5" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>loop_index</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a58870990018e7bb110927124455d5a2d" prot="private" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>m_capacity</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a44f05888c9b13af2fe63d48681092f78" prot="private" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>m_indices</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ae55f07f8c254bb63fa1c0949af358110" prot="private" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>MASK</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a21187bffa5129fc7aa3c762b8d782f8e" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>max_size</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a1e9389255da2498ac1996677eabb3aad" prot="private" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>merge_indices</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a248172e6930942b815b55fdb229a9eb2" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>merged_type</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a03e56b488513ecc4126f3abf4adaaadb" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>operator=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ace053d1a8610e234c6583136d137c356" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>operator=</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a4542e1165b9e9c4d1ccf102d75462e73" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>set_write</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a42a6fd458dc45db755c09ded2bb2ec49" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>size</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1aeee78bca73e8671366f491ff01da4bb3" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>size</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a7f3b1837c694ba83c0c07cc23abbfbac" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>start</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a1d662a23625b327d1385e411ed56b030" prot="private" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>start</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a44bd94cee402c524da05b9ad5dd63dd2" prot="private" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>START_SHIFT</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1ae5dd159a2e712baab682298c22f384ae" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>State</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a6eaa80d4d5e2e03b8431f6af5089a521" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>State</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a7ea06baf8a2722dbd3115656e40331d9" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>State</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1aa1a53c5d1daf275f9a4f1e83c70c5e33" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>State</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a8b408a8d7de384efc18caf8e7dc02752" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>State</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a3329109f1eca8f4248a4f20302de8487" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>update</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a6738ab765f4d9a9d10df41e1a913b0ec" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>write</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a60b1044dd7b2a3d4a5fcc56bda986a11" prot="private" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>write</name></member>
      <member refid="classhyperion_1_1utils_1_1RingBuffer_3_01T_00_01RingBufferType_1_1ThreadSafe_00_01Allocator_01_4_1_1State_1a014af097d253da60aa5cd6c6a6f29278" prot="public" virt="non-virtual"><scope>hyperion::utils::RingBuffer&lt; T, RingBufferType::ThreadSafe, Allocator &gt;::State</scope><name>~State</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
